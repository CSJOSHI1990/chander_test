name: SQL Deployment

run-name: >
  deploy
  ${{ github.event_name == 'schedule' && (github.event.schedule == '0 2 * * 6' && 'destroy' || 'create') || github.event.inputs.operation }}
  ${{ github.event.inputs.server != '' && github.event.inputs.server || 'all' }}

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      operation:
        description: "Operation to perform (create|destroy)"
        required: true
        type: choice
        options:
          - create
          - destroy
      server:
        description: "Target server (leave empty for all)"
        required: false
        default: ""
  schedule:
    # Friday 9 PM EST -> destroy
    - cron: "0 2 * * 6"   # 2 AM UTC = 9 PM EST Friday
    # Monday 1 AM EST -> create
    - cron: "0 6 * * 1"   # 6 AM UTC = 1 AM EST Monday
    # Test run at 3:00 PM IST daily
    - cron: "30 9 * * *"


env:
  DEFAULT_SERVERS: '["US01SQL01","US01SQL03"]'
  ENVIRONMENT: "US01"   # 🔒 fixed environment (not user editable)

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      servers: ${{ steps.set-servers.outputs.servers }}
      operation: ${{ steps.set-op.outputs.op }}
    steps:
      - name: Validate server against environment
        run: |
          if [ -n "${{ github.event.inputs.server }}" ]; then
            server_prefix="${{ github.event.inputs.server }}" 
            server_prefix="${server_prefix:0:4}"
            env_prefix="${ENVIRONMENT:0:4}"
            if [ "$server_prefix" != "$env_prefix" ]; then
              echo "❌ Server - ${{ github.event.inputs.server }} is not supported for the $ENVIRONMENT environment"
              exit 1
            fi
          fi
          
      - name: Decide servers
        id: set-servers
        run: |
          if [ "${{ github.event_name }}" == "schedule" ]; then
            echo "servers=${DEFAULT_SERVERS}" >> $GITHUB_OUTPUT
          else
            if [ -z "${{ github.event.inputs.server }}" ]; then
              echo "servers=${DEFAULT_SERVERS}" >> $GITHUB_OUTPUT
            else
              echo "servers=[\"${{ github.event.inputs.server }}\"]" >> $GITHUB_OUTPUT
            fi
          fi

      - name: Decide operation
        id: set-op
        run: |
          if [ "${{ github.event_name }}" == "schedule" ]; then
            if [ "${{ github.event.schedule }}" == "0 2 * * 6" ]; then
              echo "op=destroy" >> $GITHUB_OUTPUT
            else
              echo "op=create" >> $GITHUB_OUTPUT
            fi
          else
            echo "op=${{ github.event.inputs.operation }}" >> $GITHUB_OUTPUT
          fi

  per-server:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        server: ${{ fromJson(needs.setup.outputs.servers) }}

    steps:
      - name: Print deployment command
        if: ${{ github.event_name != 'push' }}   # ⛔ skip on push to main
        run: |
          echo "deploy ${{ needs.setup.outputs.operation }} SQL-${{ matrix.server }} -S $ENVIRONMENT"
